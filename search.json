[{"path":"https://wdfw-fp.github.io/creelutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Colt Holley. Maintainer. Evan Booher. Author. Dan Auerbach. Contributor. Kale Bentley. Contributor.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Booher E (2025). creelutils: Utility Functions Interacting Freshwater Creel Data. R package version 0.1.0, https://wdfw-fp.github.io/creelutils/.","code":"@Manual{,   title = {creelutils: Utility Functions for Interacting with Freshwater Creel Data},   author = {Evan Booher},   year = {2025},   note = {R package version 0.1.0},   url = {https://wdfw-fp.github.io/creelutils/}, }"},{"path":"https://wdfw-fp.github.io/creelutils/index.html","id":"creelutils","dir":"","previous_headings":"","what":"Utility Functions for Interacting with Freshwater Creel Data","title":"Utility Functions for Interacting with Freshwater Creel Data","text":"R package working freshwater recreational creel data. package contains variety utility functions considered general use might applicable various places workflow. also contains functions perform utility process; example, group functions relating extract, transform, load (ETL) process uploading model estimates creel database.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility Functions for Interacting with Freshwater Creel Data","text":"creelutils can installed GitHub either devtools remotes packages. GitHub source code repository, requires installation Rtools. One day may distributed binary hosted CRAN.","code":"devtools::install_github(\"wdfw-fp/creelreview\")  # Alternatively  remotes::install_github(\"wdfw-fp/creelreview\")"},{"path":[]},{"path":"https://wdfw-fp.github.io/creelutils/index.html","id":"getting-access-to-data","dir":"","previous_headings":"Overview","what":"Getting access to data:","title":"Utility Functions for Interacting with Freshwater Creel Data","text":"functions interact Washington’s public data warehouse, data.wa.gov. website serves read-interface internal PostgreSQL database. fetch_dwg - Download freshwater recreational fishery creel datasets . Requires “fishery_name” field (e.g., Skagit winter steelhead 2021). query_creel_website - get_fishery_data -","code":""},{"path":"https://wdfw-fp.github.io/creelutils/index.html","id":"internal-use-functions","dir":"","previous_headings":"Overview","what":"Internal use functions:","title":"Utility Functions for Interacting with Freshwater Creel Data","text":"functions interact directly WDFW PostgreSQL creel database, requires proper credentials permissions. establish_db_con - Connect creel database. Requires local ‘config.yml’ file active username/password. fetch_db_table - Send queries creel database R code translated SQL dbplyr package.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/index.html","id":"etl-functions","dir":"","previous_headings":"Overview > Internal use functions:","what":"ETL functions","title":"Utility Functions for Interacting with Freshwater Creel Data","text":"group functions works CreelEstimates standardize transform model output formatting, save analysis metadata, write catch effort model estimates creel database. process_estimates_bss - Standardize transform outputs ‘Bayesian State-Space (BSS)’ model common format. process_estimates_pe - Standardize transform outputs ‘Point Estimate (PE)’ model common format. map_data_grade - Applies user-provided “Provisional” “Approved” data grade label everything given set model estimates. Uploading “Approved” estimates required restricted permissions. json_conversion - Converts analysis metadata JSON format stores analysis lookup table linked session-specific id. transform_estimates - Takes outputs `process_estimates_bss’ /‘process_estimates_pe’ combines single dataframe additional formatting. prep_export - exporting model estimates creel database, function queries relevant lookup tables database joins uuid values creel estimates. , example, parses ‘catch_group’ field (e.g., Coho_Adult_AD_Kept) component fields appropriate database keys values four component fields ‘species_name’, “life_stage_name”, “fin_mark_desc, ‘fate_name’”. export_estimates - wrapper function calls number sub-functions writing estimates database. write_analysis_lut - Writes new row (n = 1) model_analysis_lut table session-specific ‘analysis_id’ field links table model_estimates_stratum model_estimates_total tables database. write_estimates_stratum - Writes model estimates database finest grain available, retaining levels stratification. write_estimates_total - Writes model esimates database summarised format, exludes several grouping variables ‘period’,‘section_num’,‘angler_type’, etc. confirm_db_upload - model estimates exported database, function confirms model_analysis_lut now contains unique ‘analysis_id’ value recent session.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/confirm_db_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm database upload — confirm_db_upload","title":"Confirm database upload — confirm_db_upload","text":"Confirms upload model estimates querying model_analysis_lut session analysis_id.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/confirm_db_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm database upload — confirm_db_upload","text":"","code":"confirm_db_upload(con, analysis_lut)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/confirm_db_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm database upload — confirm_db_upload","text":"con Connection WDFW PostgreSQL database made DBI-compliant RPostgres package. 'con' created establish_db_con.R function. analysis_lut Data frame containing session-specific analysis_id associated metadata created generate_analysis_lut.R","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/confirm_db_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirm database upload — confirm_db_upload","text":"nothing returned.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/establish_db_con.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish database connection — establish_db_con","title":"Establish database connection — establish_db_con","text":"Establishes connection WDFW PostgreSQL database. process requires proper credentials local config.yml file. Depending given user's permissions, connection may used read write data. calling DBI::dbConnect(), uses Posit-supported RPostgres package rather OBDC driver, initial attempts method led long upload times exporting creel model estimates.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/establish_db_con.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish database connection — establish_db_con","text":"","code":"establish_db_con(max_attempts = 5, delay_seconds = 3)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/establish_db_con.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish database connection — establish_db_con","text":"max_attempts Integer value representing number times attempt connection, default 5 delay_seconds Integer value representing number seconds pause attempt, default 3","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/establish_db_con.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish database connection — establish_db_con","text":"DBI connection PostgreSQL database management system. Recommend object named \"con\".","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/export_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Export creel model estimates — export_estimates","title":"Export creel model estimates — export_estimates","text":"Primary control function export, transform, load (ETL) process. Takes standardized model outputs user-input parameters export model estimates appropriately.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/export_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export creel model estimates — export_estimates","text":"","code":"export_estimates(params, analysis_lut, creel_estimates)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/export_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export creel model estimates — export_estimates","text":"params ?? analysis_lut ?? creel_estimates ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/export_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export creel model estimates — export_estimates","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_db_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Query database tables — fetch_db_table","title":"Query database tables — fetch_db_table","text":"Helper function streamline queries WDFW Postgres database. requires valid database connection. dbplyr package leveraged convert R code SQL. Note: 'filter' argument contains \"catch_group\" component, value provided parsed component fields. example, \"Chinook_Adult_AD_Released\" translated \"species_name = 'Chinook', life_stage_name = 'Adult', fin_mark_desc = 'Adclip clip + external marks', fate_name = 'Released'\".","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_db_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query database tables — fetch_db_table","text":"","code":"fetch_db_table(con, schema, table, filter = NULL, show_query = FALSE)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_db_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query database tables — fetch_db_table","text":"con valid connection WDFW PostgreSQL database. @seealso establish_db_con() schema database schema interest. freshwater creel tasks use \"creel\" schema. table table view within database schema queried. filter dplyr style filter may contain one elements. See Examples section information. show_query Optional argument set logical 'TRUE' print interpolated SQL query sent database.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_db_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query database tables — fetch_db_table","text":"Tibble query results returned R Postgres database.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_db_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query database tables — fetch_db_table","text":"","code":"if (FALSE) { # \\dontrun{  # Basic table query a <- fetch_db_table(con, \"creel\", \"fishery_location_lut\")  # Query with a single filter condition b <- fetch_db_table(   con, \"creel\", \"fishery_location_lut\",   filter = \"survey_type == 'Index'\"   )  # Query with a vector of filter conditions c <- fetch_db_table(   con, \"creel\", \"fishery_location_lut\",   filter = c(\"survey_type == 'Index'\", \"section_num == '1'\")   ) } # }"},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_dwg.html","id":null,"dir":"Reference","previous_headings":"","what":"Download creel datasets from data.wa.gov — fetch_dwg","title":"Download creel datasets from data.wa.gov — fetch_dwg","text":"Download freshwater recreational fishery creel datasets Washington's public data warehouse, data.wa.gov. valid 'fishery_name' provided several database views downloaded (.e., effort, interview, catch, water bodies, closures, )","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_dwg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download creel datasets from data.wa.gov — fetch_dwg","text":"","code":"fetch_dwg(fishery_name)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_dwg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download creel datasets from data.wa.gov — fetch_dwg","text":"fishery_name Identifier represents spatiotemporal configuration given dataset associated fishery closures.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_dwg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download creel datasets from data.wa.gov — fetch_dwg","text":"dwg, list object containing dataframe database view downloaded (e.g., effort, interview, catch)","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/fetch_dwg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download creel datasets from data.wa.gov — fetch_dwg","text":"","code":"if (FALSE) { # \\dontrun{ dwg <- fetch_dwg(\"Skagit winter steelhead 2021\") } # }"},{"path":"https://wdfw-fp.github.io/creelutils/reference/get_fishery_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","title":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","text":"Based code written descriptive_statistics.R creelreview package. Streamlines process getting creel data useful format.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/get_fishery_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","text":"","code":"get_fishery_data(fishery_names, years = NULL)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/get_fishery_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","text":"fishery_names Character string fishery name vector character strings. years provided, fishery_names combined year create fishery names (see example). years provided, uses character string vector character strings exact fishery names. Try search_fishery_name() see available options. years Integer vector integers identifying years data pull. Optional argument, defaults NULL.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/get_fishery_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","text":"List three dataframes: $interview, $catch, $effort, $locations, $ll, $closures","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/get_fishery_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain and format interview, catch, and effort data for sets of fishery-years — get_fishery_data","text":"","code":"if (FALSE) { # \\dontrun{ temp <- get_fishery_data(   fishery_names = \"Nisqually salmon\",   years = 2021:2023)   ## exact definition   temp <- get_fishery_data(   fishery_names = c(\"Skagit fall salmon 2021\", \"Skagit summer gamefish 2022\"))   ## Using the search_fishery_name() function to choose fisheries   temp = get_fishery_data(fishery_names = search_fishery_name(\"cascade winter\")) } # }"},{"path":"https://wdfw-fp.github.io/creelutils/reference/json_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert model estimate metadata objects to json format — json_conversion","title":"Convert model estimate metadata objects to json format — json_conversion","text":"Convert model estimate metadata objects json format","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/json_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert model estimate metadata objects to json format — json_conversion","text":"","code":"json_conversion(type, params, analysis_lut)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/json_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert model estimate metadata objects to json format — json_conversion","text":"type Character string; one \"script\", \"regulations\", \"r_session\". Evan Colt: help! params ?? analysis_lut ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/json_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert model estimate metadata objects to json format — json_conversion","text":"Evan colt: help!","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/json_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert model estimate metadata objects to json format — json_conversion","text":"","code":"if (FALSE) { # \\dontrun{ json_conversion(type = \"script\") json_conversion(type = \"r_session\") } # }"},{"path":"https://wdfw-fp.github.io/creelutils/reference/map_data_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Map datagrade ?? — map_data_grade","title":"Map datagrade ?? — map_data_grade","text":"Dev notes: avoid assign possibles","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/map_data_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map datagrade ?? — map_data_grade","text":"","code":"map_data_grade(params, transformed_bss_data = NULL, transformed_pe_data = NULL)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/map_data_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map datagrade ?? — map_data_grade","text":"params ?? transformed_bss_data ?? transformed_pe_data ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/map_data_grade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map datagrade ?? — map_data_grade","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/prep_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep export — prep_export","title":"Prep export — prep_export","text":"Prep export","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/prep_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep export — prep_export","text":"","code":"prep_export(con, creel_estimates)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/prep_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep export — prep_export","text":"con ?? creel_estimates ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/prep_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep export — prep_export","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_bss.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — process_estimates_bss","title":"Title — process_estimates_bss","text":"Title","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_bss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — process_estimates_bss","text":"","code":"process_estimates_bss(params, analysis_lut, estimates_bss)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_bss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — process_estimates_bss","text":"params ?? analysis_lut ?? estimates_bss ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_bss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — process_estimates_bss","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_pe.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — process_estimates_pe","title":"Title — process_estimates_pe","text":"Title","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_pe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — process_estimates_pe","text":"","code":"process_estimates_pe(analysis_lut, estimates_pe, params)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_pe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — process_estimates_pe","text":"analysis_lut ?? estimates_pe ?? params ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/process_estimates_pe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — process_estimates_pe","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the creel website for specific combinations of data — query_creel_website","title":"Query the creel website for specific combinations of data — query_creel_website","text":"Queries website storing creel data, uses Socrata API (e.g., https://dev.socrata.com/docs/queries/)","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the creel website for specific combinations of data — query_creel_website","text":"","code":"query_creel_website(table_name, query_list, limit = 1e+05)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the creel website for specific combinations of data — query_creel_website","text":"table_name Name table (e.g., catch, interview, effort) query_list Basically filter() statements list named items. Item name matches column name table, item either atomic matched exactly, vector matching multiple options. See details. limit maximum number rows return. Numeric, defaults 100,000","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the creel website for specific combinations of data — query_creel_website","text":"tibble creel data","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query the creel website for specific combinations of data — query_creel_website","text":"query focused filtering, designed written R list, number conditions . example, return data fishery_name \"Baker summer sockeye 2022\", query list include fishery_name = \"Baker summer sockeye 2022\". return data species \"Kokanee\" \"Rainbow Trout\", query list also include species = c(\"Kokanee\", \"Rainbow Trout\").","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/query_creel_website.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the creel website for specific combinations of data — query_creel_website","text":"","code":"table_name = \"catch\" ## name of table query_list = list( ## each item in list should be named for a column in the table, and should be   fishery_name = \"Baker summer sockeye 2022\",   fin_mark = \"UM\",   species = c(\"Kokanee\", \"Rainbow Trout\") ) dat = query_creel_website(table_name, query_list) head(dat) #> # A tibble: 6 × 42 #>   creel_event_id        event_date          water_body project_name fishery_name #>   <chr>                 <dttm>              <chr>      <chr>        <chr>        #> 1 E8B234ED-8173-41DB-B… 2022-08-28 00:00:00 Baker Lake District 14  Baker summe… #> 2 4E8E7F1D-D41F-4FB9-B… 2022-08-27 00:00:00 Baker Lake District 14  Baker summe… #> 3 4E8E7F1D-D41F-4FB9-B… 2022-08-27 00:00:00 Baker Lake District 14  Baker summe… #> 4 88C7E889-48E0-41D1-8… 2022-08-14 00:00:00 Baker Lake District 14  Baker summe… #> 5 7F52BAD4-7C73-48A3-B… 2022-08-05 00:00:00 Baker Lake District 14  Baker summe… #> 6 D729D3DF-0C24-4414-A… 2022-07-20 00:00:00 Baker Lake District 14  Baker summe… #> # ℹ 37 more variables: catch_id <chr>, interview_id <chr>, species <chr>, #> #   run <lgl>, gear_type <chr>, fate <chr>, life_stage <chr>, fin_mark <chr>, #> #   sex <chr>, maturity <lgl>, fork_length_cm <dbl>, total_length_in <lgl>, #> #   fish_processing_status <chr>, cwt_detection_status <chr>, #> #   pit_detection_status <chr>, fish_count <dbl>, scale_card_num <dbl>, #> #   scale_card_pos <dbl>, dna_code <lgl>, pit_code <lgl>, snout_code <lgl>, #> #   scale_age_code <lgl>, scale_pattern <lgl>, comments <chr>, …"},{"path":"https://wdfw-fp.github.io/creelutils/reference/transform_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — transform_estimates","title":"Title — transform_estimates","text":"Title","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/transform_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — transform_estimates","text":"","code":"transform_estimates(dwg, transformed_pe_data, transformed_bss_data)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/transform_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — transform_estimates","text":"dwg ?? transformed_pe_data ?? transformed_bss_data ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/transform_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — transform_estimates","text":"??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_lut.html","id":null,"dir":"Reference","previous_headings":"","what":"Write look-up table — write_lut","title":"Write look-up table — write_lut","text":"Write look-table","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_lut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write look-up table — write_lut","text":"","code":"write_lut(con, analysis_lut, max_retries = 5)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_lut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write look-up table — write_lut","text":"con ?? analysis_lut ?? max_retries maximum number times try write; numeric, defaults 5.","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Write stratum — write_stratum","title":"Write stratum — write_stratum","text":"Write stratum","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write stratum — write_stratum","text":"","code":"write_stratum(con, creel_estimates_db)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write stratum — write_stratum","text":"con ?? creel_estimates_db ??","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Total — write_total","title":"Write Total — write_total","text":"Write Total","code":""},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Total — write_total","text":"","code":"write_total(con, creel_estimates_db)"},{"path":"https://wdfw-fp.github.io/creelutils/reference/write_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Total — write_total","text":"con ?? creel_estimates_db ??","code":""}]
